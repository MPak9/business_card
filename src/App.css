:root {
  font-family: "Quattrocento Sans", sans-serif;

  /*clamp: min limit, preferred, maximum limit */
  --fs-title: clamp(36px, 2vw, 64px);
  --fs-subtitle: clamp(20px, 1.5vw, 24px);
  --fs-default: clamp(0.75em, 1vw, 1em);

  --col-selected: rgb(173, 216, 230);
}

.App {
  display: flex;
  flex-direction: column;
  text-align: left;
  height: 100vh;
  justify-content: center;
  font-size: var(--fs-default);
  text-shadow: 1px 1px 4px rgba(0, 0, 0, 0.1);
}

.outline {
  border: solid;
}

/*--------------------------------Text Styling --------------------------------------------------------------- */

h1 {
  font-size: var(--fs-subtitle);
  font-family: "Quattrocento Sans", sans-serif;
  color: rgb(63, 63, 63);
  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.15);
}

h2 {
  font-size: var(--fs-title);
  margin-top: 0.25em;
  margin-bottom: 0.25em;
  font-family: "Quattrocento", serif;
  text-shadow: 0px 0px 3px rgba(0, 0, 0, 0.2); /*Makes it feel like text is bleeding on paper a bit and tangible*/
}

h3 {
  font-size: var(--fs-subtitle);
  font-family: "Quattrocento", serif;
  margin-top: 1em;
  margin-bottom: 0.5em;
  text-shadow: 0px 0px 4px rgba(0, 0, 0, 0.15);
}

h4 {
  font-size: var(--fs-default);
  font-family: "Quattrocento Sans", sans-serif;
  color: rgb(34, 34, 34);
}

a {
  color: black;
  text-decoration: none;
}

.selectable:hover {
  color: var(--col-selected);
  cursor: pointer;
}

.selected {
  color: var(--col-selected);
}

p {
  margin: 0.5em 0 0.5em 0;
}

.selectableSVG:hover {
  fill: var(--col-selected);
  cursor: pointer;
  transform: scale(0.9);
}

.copySVG::after {
  display: inline-block; /*Span inlines cannot be manipulated by transforms thus it needs to be an inline block */
  content: "Copied";
  color: var(--col-selected);
  animation: copyNotification 0.7s ease-in-out;
}

@keyframes copyNotification {
  0% {
    bottom: 0px;
    opacity: 0;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0;
    transform: translateY(-10px);
  }
}

.dropshadow {
  filter: drop-shadow(0px -5px 10px rgba(0, 0, 0, 0.05));
}

/*----------------Container inside the Card that holds all the content margin and orientation styling -------------------------------------- */

.contentContainer {
  display: flex;
  flex-direction: column; /*Now whether in Landscape or Portrait mode the content will be in the correct orientation*/
  margin: 2em;
}

.contentContainer .imageContainer {
  flex-basis: 100%;
  display: flex;
  flex-direction: column-reverse;
  justify-content: center;
}

.contentContainer img {
  display: block;
  object-fit: contain;
  width: clamp(1em, 80%, 20em);
  height: auto;
  margin-top: 1rem;
  border-radius: 0.5em;
}

/*------------------------------------------- SOLO Flippable Card Container Styling ---------------------------------------------------------- */

/* The flip card container */
.flippableCardContainer {
  margin-left: 5%;
  margin-right: 5%;
  background-color: transparent;
  height: 80vh;
  perspective: 1000px; /* Remove this if you don't want the 3D effect */
}

/* This container is needed to position the front and back side of the cards in place */
.card {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: left;
  transition: transform 0.8s;
  transform-style: preserve-3d;
  border-radius: 1em;
  box-shadow: 0 0 15px rgba(0, 0, 0, 0.15), 3px 3px 4px rgba(0, 0, 0, 0.1);
}

/* Do an horizontal flip when you move the flip box container */
.flip180 .card {
  transform: rotateY(180deg);
}

.flipNeg180 .card {
  transform: rotate3d(0, 1, 0, -180deg);
  //transform: rotateY(-180deg);
}

.frontCard,
.backCard {
  position: absolute;
  width: 100%;
  height: 100%;
  -webkit-backface-visibility: hidden; /* Safari */
  backface-visibility: hidden;
  display: flex;
  border-radius: 1em;
  background-color: white;
}

.backCard {
  transform: rotateY(180deg);
  /* so when the card is fliped 180 degrees in the y direction later it'll be right side up */
}

/*--------------------------------------------------Different Layouts on Card Styling---------------------------------------------- */

.frontCard > div {
  flex-basis: 50%;
  flex-grow: 0;
}

/*---------------------------(PC & TABLET) DOUBLE LAYOUT STYLING --------------------------------------------------------------------- */

.doubleLayout {
  display: flex;
  flex-direction: row;
  text-align: left;
  height: 80vh;
  justify-content: center;
  gap: 5em;
  margin: 5em;
}

.doubleLayout > div {
  flex-basis: 50%;
}

.doubleLayout .backCard {
  transform: rotateY(0);
  backface-visibility: visible;
}

.doubleLayout .flippableCardContainer {
  margin: 0;
}

/*------------------------------------------------------Device Rotation & Orientation----------------------------------- */
@media (orientation: landscape) {
  .backCard > div:nth-child(1) {
    flex-basis: 70%;
  }
  .backCard > div:nth-child(2) {
    flex-basis: 30%;
    flex-direction: column-reverse;
    padding-left: 1em;
    border-left: 1px solid darkgray;
  }

  .backCard .imageContainer {
    justify-content: flex-start;
  }

  .doubleLayout .backCard,
  .doubleLayout .frontCard {
    flex-direction: column;
  }

  .doubleLayout .frontCard .contentContainer,
  .doubleLayout .backCard .contentContainer {
    margin: 0;
    margin-left: 2em;
    margin-right: 2em;
  }

  .doubleLayout .frontCard > div:nth-child(1),
  .doubleLayout .backCard > div:nth-child(1) {
    margin-top: 1em;
  }
  .doubleLayout .frontCard > div:nth-child(2),
  .doubleLayout .backCard > div:nth-child(2) {
    margin-bottom: 1.5em;
    padding-left: 0;
    border-left: 0;
  }
  .doubleLayout .backCard > div:nth-child(2) h4 {
    border-top: 1px solid darkgray;
    padding-top: 1em;
  }

  .doubleLayout .imageContainer {
    justify-content: center;
  }

  .doubleLayout .frontCard .content-center {
    align-items: center;
  }
}

@media (orientation: landscape) and (min-width: 1100px) and (min-height: 500px) {
  .doubleLayout {
    margin-left: 20em;
    margin-right: 20em;
  }
  .doubleLayout .frontCard .content-center {
    align-items: flex-start;
  }
}
@media (orientation: landscape) and (min-width: 1100px) and (min-height: 700px) {
  .doubleLayout {
    margin-left: 10em;
    margin-right: 10em;
  }

  .doubleLayout .frontCard .content-center {
    align-items: center;
  }
}

@media (orientation: portrait) {
  .frontCard,
  .backCard,
  .doubleLayout {
    flex-direction: column;
  }
  .contentContainer {
    margin: 0;
    margin-left: 2em;
    margin-right: 2em;
  }

  .frontCard .content-center {
    align-items: center;
  }

  .backCard > div:nth-child(1) {
    flex-basis: 60%;
    margin-top: 1em;
  }
  .backCard > div:nth-child(2) {
    flex-basis: 40%;
    flex-direction: column-reverse;
    margin-bottom: 1em;
  }

  .backCard > div:nth-child(2) h4 {
    border-top: 1px solid darkgray;
    padding-top: 1.5em;
  }

  .backCard > .contentContainer > #img {
    order: -1; /*So img on the back card will appear on the very top in portrait mode*/
  }

  .doubleLayout .backCard,
  .doubleLayout .frontCard {
    flex-direction: row;
  }

  .doubleLayout .backCard > div:nth-child(1),
  .doubleLayout .backCard > div:nth-child(2),
  .doubleLayout .frontCard .contentContainer {
    margin: 2em 2em 2em 2em;
  }

  .doubleLayout .backCard .imageContainer {
    justify-content: flex-start;
  }
  .doubleLayout .backCard > div:nth-child(2) h4 {
    border-top: 0px;
  }

  .doubleLayout .backCard > div:nth-child(2).contentContainer {
    border-left: 1px solid darkgray;
    padding-left: 1em;
  }
}
